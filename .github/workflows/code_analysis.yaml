name: Code analysis
on: 
  pull_request:
    branches:
      - 'main'
      - 'test_deploy'
  push:
    branches:
      - 'develop'
      - 'test_develop'
      - 'main'
      - 'test_deploy'
env:
  FINDSECBUGS_VERSION: 1.12.0

jobs:
  codeql:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'go']
    steps:
      - run: echo "A ${{ github.event_name }} event happened, starting workflow."
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
      - run: echo "Job ended."

  semgrep:
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
      - uses: actions/checkout@v3
      - run: semgrep scan --sarif --output=semgrep.sarif
        env:
          SEMGREP_RULES: >- # more at semgrep.dev/r
            p/security-audit
            p/secrets
            p/ci
            p/javascript
            p/scala
            p/golang
            p/owasp-top-ten
            p/clientside-js
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: semgrep.sarif

  identify_maven:
    uses: ./.github/workflows/identify_maven.yaml

  maven_spotbugs:
    runs-on: ubuntu-latest
    needs: identify_maven
    if: ${{ needs.identify_maven.outputs.directories != '[]' && needs.identify_maven.outputs.directories != '' }}
    strategy:
      fail-fast: false
      matrix:
        pom:  ${{ fromJson(needs.identify_maven.outputs.directories) }}
    steps:
      # we use OpenSky API, so we need to compile the dependency to package our files
      - name: Clone OpenSky API repo
        run: git clone https://github.com/openskynetwork/opensky-api.git
      - name: Install OpenSky API
        run: mvn -q -f ./opensky-api/java/pom.xml install
      - uses: actions/checkout@v3
      - name: Check if Spotbugs plugin is configured in Maven project
        id: plugin_presence
        run: echo ::set-output name=presence::`cat ".${{ matrix.pom }}/pom.xml" | grep spotbugs-maven-plugin`
      - name: Run Spotbugs plugin
        id: code_check
        if: ${{ steps.plugin_presence.outputs.presence != '' }}
        run: mvn -q -f ".${{ matrix.pom }}/pom.xml" compile spotbugs:spotbugs '-DsarifOutput=true'
      - name: Upload SARIF file
        if: ${{ steps.plugin_presence.outputs.presence != '' }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ".${{ matrix.pom }}/target/spotbugsSarif.json"

  # findsecbugs:
  #   runs-on: ubuntu-latest
  #   needs: identify_maven
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       pom: ${{ fromJson(needs.identify_maven.outputs.directories) }}
  #   steps:
  #   # we use OpenSky API, so we need to compile the dependency to package our files
  #   - run: git clone https://github.com/openskynetwork/opensky-api.git
  #   - run: mvn -q -f ./opensky-api/java/pom.xml install
  #   # compile jar to allow for Scala Lang analysis
  #   - uses: actions/checkout@v3
  #   - run: mvn -q -f ".${{ matrix.pom }}/pom.xml" package
  #   # get Maven project info
  #   - id: get_artifact_id
  #     uses: Mudlet/xmlstarlet-action@7deec762169d540692f9247c9fb641fa37d39e2e
  #     with:
  #       args: sel -t -v "/_:project/_:artifactId" states_source/pom.xml
  #   - id: get_version
  #     uses: Mudlet/xmlstarlet-action@7deec762169d540692f9247c9fb641fa37d39e2e
  #     with:
  #       args: sel -t -v "/_:project/_:version" states_source/pom.xml
  #   - id: get_final_name
  #     continue-on-error: true
  #     uses: Mudlet/xmlstarlet-action@7deec762169d540692f9247c9fb641fa37d39e2e
  #     with:
  #       args: sel -t -v "//_:build/_:finalName" states_source/pom.xml
  #   # code scan
  #   - run: wget https://github.com/find-sec-bugs/find-sec-bugs/releases/download/version-${FINDSECBUGS_VERSION}/findsecbugs-cli-${FINDSECBUGS_VERSION}.zip
  #   - run: unzip findsecbugs-cli-${FINDSECBUGS_VERSION}
  #   - run: chmod u+x ./findsecbugs.sh
  #   - name: Run FindSecBugs checks
  #     run: |
  #       ARTIFACT_ID=${{ steps.get_artifact_id.outputs.xmlstarlet_result }}
  #       VERSION=${{ steps.get_version.outputs.xmlstarlet_result }}
  #       ./findsecbugs.sh -sarif -output "./out.sarif" $GITHUB_WORKSPACE${{ matrix.pom }}/target/${ARTIFACT_ID}-${VERSION}.jar
  #   - name: Upload SARIF file
  #     uses: github/codeql-action/upload-sarif@v2
  #     with:
  #       sarif_file: out.sarif
