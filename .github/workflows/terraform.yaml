name: 'Terraform CI'
on:
  workflow_call:
    secrets:
      PROJECT:
        required: true
      TERRAFORM_GCP_CREDENTIALS:
        required: true
env:
  TF_VAR_region: 'us-central1' # TODO
  TF_VAR_vectors_topic: vectorsTopic
  TF_VAR_aircraft_list_subscriber_id: list_sub
  TF_VAR_kube_cluster: gke-1
  TF_VAR_kube_network: vpc-01
  TF_VAR_kube_subnetwork: sub-vpc-01
  TF_VAR_kube_pods_range: us-central1-01-gke-01-pods
  TF_VAR_kube_services_range: us-central1-01-gke-01-services
  TF_VAR_opensky_bb: 36.619987291,47.1153931748,6.7499552751,18.4802470232
  TF_VAR_kube_namespace: airspace-monitoring

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.1.9
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform -chdir=terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.TERRAFORM_GCP_CREDENTIALS }}
    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform -chdir=terraform fmt -check
    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: |
        terraform -chdir=terraform plan \
          -var 'project_id=${{ secrets.PROJECT }}'
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.TERRAFORM_GCP_CREDENTIALS }}
    # On push to main, build or change infrastructure according to Terraform configuration files
    # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.event_name == 'push'
      run: |
        terraform -chdir=terraform apply -auto-approve \
          -var 'project_id=${{ secrets.PROJECT }}'
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.TERRAFORM_GCP_CREDENTIALS }}
