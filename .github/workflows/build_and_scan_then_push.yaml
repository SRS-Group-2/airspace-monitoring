name: Build and scan container image (then push)
on:
  workflow_call:
    inputs:
      # must be a list of directories and service names, like '[ { "directory": "dir1", "name": "service1"} ]'
      services:
        required: true
        type: string
      push:
        required: true
        type: string
    secrets:
      PROJECT:
        required: true
      DOCKER_REPO:
        required: true
      DOCKER_REPO_REGION:
        required: true
      GCP_CREDENTIALS:
        required: false
jobs:
  build_scan_push:
    name: Build and scan a Docker image, then push it
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: 
        service: ${{ fromJson(inputs.services) }}
    steps:
      - run: echo Working on ${{ matrix.service.directory }} directory, for ${{ matrix.service.name }} service
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Get last commit that changed things
        id: last_change
        run: echo ::set-output name=commit::`git log -n 1 --pretty=format:%H -- ${{ matrix.service.directory }}`
      - run: echo ${{ secrets.DOCKER_REPO_REGION }}-docker.pkg.dev/${{ secrets.TEST_PROJECT_ID }}/${{ secrets.DOCKER_REPO }}/${{ matrix.service.name }}:${{ steps.last_change.outputs.commit }} $GITHUB_WORKSPACE/${{ matrix.service.directory }}
      - name: Build image
        run: |-
          docker build \
            -t ${{ secrets.DOCKER_REPO_REGION }}-docker.pkg.dev/${{ secrets.PROJECT }}/${{ secrets.DOCKER_REPO }}/${{ matrix.service.name }}:${{ steps.last_change.outputs.commit }} \
            -t ${{ secrets.DOCKER_REPO_REGION }}-docker.pkg.dev/${{ secrets.PROJECT }}/${{ secrets.DOCKER_REPO }}/${{ matrix.service.name }}:latest \
            $GITHUB_WORKSPACE/${{ matrix.service.directory }}
      # - name: Scan image
      #   id: scan
      #   uses: azure/container-scan@v0
      #   with:
      #     image-name: ${{ secrets.DOCKER_REPO_REGION }}-docker.pkg.dev/${{ secrets.PROJECT }}/${{ secrets.DOCKER_REPO }}/${{ matrix.service.name }}:${{ github.sha }}
      - name: Scan image for good practices
        id: scan_dockle
        run: |
          VERSION=$(
            curl --silent "https://api.github.com/repos/goodwithtech/dockle/releases/latest" | \
            grep '"tag_name":' | \
            sed -E 's/.*"v([^"]+)".*/\1/' \
          ) && docker run --rm -v /var/run/docker.sock:/var/run/docker.sock goodwithtech/dockle:v${VERSION} -f sarif \
              ${{ secrets.DOCKER_REPO_REGION }}-docker.pkg.dev/${{ secrets.PROJECT }}/${{ secrets.DOCKER_REPO }}/${{ matrix.service.name }}:${{ steps.last_change.outputs.commit }}
      - name: Scan image for vulnerabilities
        id: scan
        uses: aquasecurity/trivy-action@v0.3.0
        with:
          scan-type: 'image'
          image-ref: '${{ secrets.DOCKER_REPO_REGION }}-docker.pkg.dev/${{ secrets.PROJECT }}/${{ secrets.DOCKER_REPO }}/${{ matrix.service.name }}:${{ steps.last_change.outputs.commit }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          security-checks: 'vuln,config'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'
      - uses: 'google-github-actions/auth@v0'
        id: 'auth'
        if: ${{ inputs.push == 'true' }}
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - name: 'Set up Cloud SDK'
        if: ${{ inputs.push == 'true' }}
        id: 'cloud_setup'
        uses: 'google-github-actions/setup-gcloud@v0'
      # Configure docker to use the gcloud command-line tool as a credential helper
      - name: Configure docker to use gcloud
        if: ${{ inputs.push == 'true' }}
        id: 'docker_cloud_setup'
        run: |
          gcloud auth configure-docker ${{ secrets.DOCKER_REPO_REGION }}-docker.pkg.dev
      # Push image to Google Container Registry
      - name: Push
        if: ${{ inputs.push == 'true' }}
        run: |-
          docker push ${{ secrets.DOCKER_REPO_REGION }}-docker.pkg.dev/${{ secrets.PROJECT }}/${{ secrets.DOCKER_REPO }}/${{ matrix.service.name }} --all-tags
