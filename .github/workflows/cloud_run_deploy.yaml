name: Deploy on Cloud Run the changed services
on: 
  push:
    branches:
      - 'main'
      - 'test_deploy'
jobs:
  identify_changed_services:
    name: Identify the services that were updated
    runs-on: ubuntu-latest
    outputs:
      directories: ${{ steps.check_files.outputs.changed_dirs }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: echo ${{ github.event_name }} happened on ${GITHUB_REF#refs/heads/}
      - name: Check which files were changed
        id: check_files
        run: |
          DIRS=""
          OBJECTS=""
          if [[ "${{ github.event.before }}" == "0000000000000000000000000000000000000000" ]]; then
            echo Calculating git diff between HEAD and HEAD^
            git diff --name-only HEAD^ HEAD > files.txt
          else
            echo Calculating git diff between HEAD and ${{ github.event.before }}
            git diff --name-only ${{ github.event.before }} HEAD > files.txt
          fi
          while IFS= read -r file
          do
            # echo checking $file
            if [[ "${file%/*}" == *"/"* ]]; then
              # Working on a directory
              # find all subdirectories
              IFS='/' read -r -a ARRAY <<< "${file%/*}"
              # check subdirectories
              BASE_DIR=""
              for DIRECTORY in "${ARRAY[@]}"; do
                if [[ "${DIRECTORY}" != ".devcontainer" ]]; then
                  BASE_DIR=${BASE_DIR}${DIRECTORY}/
                  # echo Checking $BASE_DIR
                  if [[ -n "$(ls -A "${BASE_DIR}Dockerfile" 2> /dev/null)" ]]; then
                    # echo $BASE_DIR is buildable
                    DIRS=`echo $DIRS,$BASE_DIR`
                    # OBJECTS=`echo $OBJECTS,{\"directory\": \"${BASE_DIR}\", \"name\": \"${DIRECTORY}\"}`
                  fi
                fi
              done
            else
                echo Found changed file ${file%/*} outside of directories
            fi
          done < files.txt
          if [[ "${DIRS}" != "" ]]; then
            IFS="," read -r -a DIRS <<< "$(echo "${DIRS[@]}" | tr ',' '\n' | sort -u | tr '\n' ',')"
            echo Found directories: ${DIRS[@]}
            for DIR in "${DIRS[@]}"; do
              if [[ "${DIR}" != "" ]]; then
                TMP=${DIR%/*}
                OBJECTS=`echo $OBJECTS,{\"directory\": \"${DIR}\", \"name\": \"${TMP##*/}\"}`
              fi
            done
            OBJECTS=${OBJECTS#*,}
          fi
          echo ::set-output name=changed_dirs::[$OBJECTS]
  
  build_scan_push:
    name: Build and push Docker image to Google registry
    needs: identify_changed_services
    runs-on: ubuntu-latest
    if: ${{ needs.identify_changed_services.outputs.directories != '[]' && needs.identify_changed_services.outputs.directories != '' }}
    strategy:
      fail-fast: false
      matrix: 
        service: ${{ fromJson(needs.identify_changed_services.outputs.directories) }}
    steps:
      - run: echo Working on ${{ matrix.service.directory }} directory, for ${{ matrix.service.name }} service
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Build image
        run: |-
          docker build -t us-central1-docker.pkg.dev/${{ secrets.TEST_PROJECT_ID }}/docker-repo/${{ matrix.service.name }}:$GITHUB_SHA $GITHUB_WORKSPACE/${{ matrix.service.directory }}
      - name: Scan image
        id: scan
        uses: azure/container-scan@v0
        with:
          image-name: us-central1-docker.pkg.dev/${{ secrets.TEST_PROJECT_ID }}/docker-repo/${{ matrix.service.name }}:${{ github.sha }}
      - uses: 'google-github-actions/auth@v0'
        id: 'auth'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - name: 'Set up Cloud SDK'
        id: 'cloud_setup'
        uses: 'google-github-actions/setup-gcloud@v0'
      # Configure docker to use the gcloud command-line tool as a credential helper
      - name: Configure docker to use gcloud
        id: 'docker_cloud_setup'
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
      # Push image to Google Container Registry
      - name: Push
        run: |-
          docker push us-central1-docker.pkg.dev/${{ secrets.TEST_PROJECT_ID }}/docker-repo/${{ matrix.service.name }}:$GITHUB_SHA

  deploy:
    name: Deploy service on Google Cloud
    needs: build_scan_push
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: 
        service: ${{ fromJson(needs.identify_changed_services.outputs.directories) }}
    steps:
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v0'
        with:
          service: ${{ matrix.service.name }}
          image: us-central1-docker.pkg.dev/${{ secrets.TEST_PROJECT_ID }}/docker-repo/${{ matrix.service.name }}:${{ github.sha }}
          region: 'us-central1'
      - name: 'Use output'
        run: 'curl "${{ steps.deploy.outputs.url }}"'